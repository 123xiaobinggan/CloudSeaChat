{"version":3,"file":"message.js","sources":["pages/message/message.vue","../../../H-builderx/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbWVzc2FnZS9tZXNzYWdlLnZ1ZQ"],"sourcesContent":["<template>\r\n    <view class=\"page-container\" @touchstart=\"onTouchStart\" @touchend=\"onTouchEnd\" @touchmove=\"onTouchMove\">\r\n        <!-- 顶部导航栏 -->\r\n        <view class=\"nav-tabs\">\r\n            <view\r\n                v-for=\"(tab, index) in tabs\"\r\n                :key=\"index\"\r\n                class=\"tab-item\"\r\n                :class=\"{ active: activeTab === index }\"\r\n                @tap=\"switchTab(index)\"\r\n            >\r\n                <view class=\"tab-wrap\">\r\n                    <image :src=\"tab.icon\" class=\"tab-icon\" mode=\"aspectFit\" />\r\n                    <view class=\"tab-count\" v-if=\"tab.count > 0\">\r\n                        <text class=\"tab-count-text\">{{ tab.count }}</text>\r\n                    </view>\r\n                </view>\r\n\r\n            </view>\r\n        </view>\r\n\r\n        <view class=\"all-read-container\">\r\n            <button class=\"all-read-btn\" @tap=\"markMessagesAsRead(groupedMessagesByType[tabs[activeTab].type])\">\r\n                <text class=\"btn-icon\">✔</text> 全部已读\r\n            </button>\r\n        </view>\r\n\r\n        <!-- 内容区，横向滑动 -->\r\n        <view class=\"content-wrapper\" :style=\"contentStyle\" >\r\n            <view class=\"content-page\" v-for=\"(tab, index) in tabs\" :key=\"index\">\r\n                \r\n                <view v-if=\"groupedMessagesByType[tab.type].length === 0\" class=\"no-messages\">\r\n                    <text>暂无消息</text>\r\n                </view>\r\n\r\n                <view\r\n                    v-for=\"(group, gIndex) in groupedMessagesByType[tab.type]\"\r\n                    :key=\"gIndex\"\r\n                    class=\"date-group\"\r\n                >\r\n                    <view class=\"date-header\">\r\n                        <text class=\"date-text\">{{ group.create_date }}</text>\r\n                    </view>\r\n\r\n                    <view class=\"message-card\"\r\n                        v-for=\"(msg, mIndex) in group.messages\"\r\n                        :key=\"mIndex\"\r\n                        @tap=\"markMessagesAsRead([{ create_date: group.create_date, messages: [msg] }])\"\r\n                    >\r\n                        <view class=\"header\">\r\n                            <image class=\"avatar\" :src=\"msg.actor_avatar\" mode=\"aspectFill\" @tap=\"to_personal_info(msg)\" />\r\n                            <view class=\"message-info\">\r\n                                <view>\r\n                                    <text class=\"username\">{{ msg.actor_username || '未知' }}</text>\r\n                                    <text class=\"text\">{{ getMessageText(msg) }}</text>\r\n                                </view>\r\n                                <br />\r\n                                <text class=\"meta\">{{ formatDate(msg.create_time) }} · {{ msg.ip }}</text>\r\n                            </view>\r\n                            <view v-if=\"!msg.read\" class=\"unread-dot\"></view>\r\n                        </view>\r\n\r\n                        <text v-if=\"msg.content && msg.action_type !== 'like'\" class=\"content\">{{ msg.content }}</text>\r\n\r\n                        <view v-if=\"msg.target_type === 'post'\" class=\"source-post-card\" @tap=\"to_source_post(msg)\">\r\n                            <view class=\"source-header\">\r\n                                <image class=\"avatar\" :src=\"msg.source_post.avatar\" />\r\n                                <view class=\"user-info\">\r\n                                    <text class=\"username\">{{ msg.source_post.username || '未知' }}</text>\r\n                                    <text class=\"meta\">{{ formatDate(msg.source_post.create_time) }} · {{ msg.source_post.ip }}</text>\r\n                                </view>\r\n                            </view>\r\n\r\n                            <view class=\"source-text\">\r\n                                <text>{{ msg.source_post.content }}</text>\r\n                            </view>\r\n                        </view>\r\n\r\n                        <view v-if=\"msg.target_type === 'comment'\" class=\"source-comment-card\">\r\n                            <text>| {{ msg.source_comment.username || '未知' }}: {{ msg.source_comment.content }}</text>\r\n                        </view> \r\n\r\n                        <view v-if=\"msg.action_type=='comment' \" class=\"reply-action\" @tap.stop=\"toggleReplyInput(msg)\">\r\n                            <text style=\"color:grey\">回复</text>\r\n                        </view>\r\n\r\n                        <view v-if=\"msg.action_type=='comment' && msg.showInput\" class=\"comment-input-wrapper\" @tab.stop>\r\n                            <input\r\n                                v-model=\"newReply\"\r\n                                class=\"comment-input\"\r\n                                :placeholder=\" '回复' + msg.actor_username  + '...' \"\r\n                            />\r\n                            <button class=\"reply-button\" @tap.stop=\"()=>submitComment(msg,newReply)\">回复</button>\r\n                        </view>\r\n                       \r\n                    </view>\r\n                </view>\r\n\r\n                <!-- 加载中状态 -->\r\n                <view class=\"loading-box\" v-if=\"loading && !loaded\">\r\n                    <view class=\"spinner\"></view>\r\n                    <text class=\"loading-text\">加载中...</text>\r\n                </view>\r\n\r\n                <!-- 加载完成 -->\r\n                <view class=\"loaded-box\" v-if=\"loaded && !loading\">\r\n                    <text class=\"loaded-text\">加载完成</text>\r\n                </view>\r\n\r\n            </view>\r\n        </view>\r\n    </view>\r\n\r\n</template>\r\n\r\n<script>\r\nimport PubSub from 'pubsub-js';\r\n    export default {\r\n        data() {\r\n            return {\r\n                user:{\r\n                    account_id: '',\r\n                    ip: '未知'\r\n                },\r\n                tabs: [\r\n                    {\r\n                        icon: '/static/index/赞.png',\r\n                        type: 'like',\r\n                        count: 0\r\n                    },\r\n                    {\r\n                        icon: '/static/index/评论.png',\r\n                        type: 'comment',\r\n                        count: 0\r\n                    },\r\n                    {\r\n                        icon: '/static/index/转发.png',\r\n                        type: 'share',\r\n                        count: 0\r\n                    }\r\n                ],\r\n                activeTab: 0,\r\n                groupedMessagesByType: {\r\n                    like: [],\r\n                    comment: [],\r\n                    share: []\r\n                },\r\n                token: '',\r\n                loading: false,\r\n                loaded: false,\r\n                StartX: '',\r\n                dragging: false,\r\n                translateX: 0,\r\n                windowWidth: 375,\r\n                newReply: '',\r\n                lastShowInput: null,\r\n            }\r\n        },\r\n        computed: {\r\n            currentMessages() {\r\n                return this.groupedMessagesByType[this.tabs[this.activeTab].type];\r\n            },\r\n            contentStyle() {\r\n                const transition = this.dragging ? 'none' : 'transform 0.3s ease';\r\n                return `width: ${this.tabs.length * 100}%; display: flex; transform: translateX(${this.translateX}px); transition: ${transition};`;\r\n            }\r\n        },\r\n        watch:{\r\n            'user.account_id'(){\r\n                console.log('account_id change')\r\n                this.groupedMessagesByType.like = [];\r\n                this.groupedMessagesByType.comment = [];\r\n                this.groupedMessagesByType.share = [];\r\n                this.fetchMessages('like');\r\n                this.fetchMessages('comment');\r\n                this.fetchMessages('share');\r\n            },\r\n            activeTab(){\r\n                this.translateX = -this.windowWidth * this.activeTab;\r\n            },\r\n            tabs:{\r\n                deep: true,\r\n                handler(){\r\n                    if(this.tabs[0].count+this.tabs[1].count+this.tabs[2].count > 0){\r\n                        uni.showTabBarRedDot({\r\n                            index: 1,\r\n                        })\r\n                    }\r\n                    else{\r\n                        uni.hideTabBarRedDot({\r\n                            index: 1,\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        mounted(){\r\n            uni.getSystemInfo({\r\n                success: res => {\r\n                    this.windowWidth = res.windowWidth;\r\n                    this.translateX = -this.activeTab * res.windowWidth;\r\n                }\r\n            });\r\n        },\r\n        onShow(){\r\n            const app = getApp();\r\n            if(app.userInfo){\r\n                this.user.account_id = app.userInfo.account_id;\r\n                console.log('messges收到用户信息',this.user)\r\n            }\r\n        },\r\n        onPullDownRefresh(){\r\n            if(this.loading) return;\r\n            this.groupedMessagesByType[this.tabs[this.activeTab].type] = [];\r\n            this.fetchMessages(this.tabs[this.activeTab].type).finally(()=>{\r\n                uni.stopPullDownRefresh();\r\n            })\r\n        },\r\n        onReachBottom(){\r\n            console.log('OnreachBottom')\r\n            // 页面滚动到底部时加载更多帖子\r\n            if(this.loading) return; // 如果正在加载或没有更多帖子，直接返回\r\n            this.loading = true; // 设置加载状态\r\n            this.loaded = false; // 设置加载完成状态为 false\r\n            this.fetchMessages(this.activeTab).finally(() => {\r\n                this.loading = false; \r\n                this.loaded = true; \r\n                setTimeout(() => {\r\n                this.loaded = false; // 重置加载完成状态\r\n                }, 2000); // 2秒后重置加载完成状态\r\n            }); // 调用加载更多帖子的方法\r\n        },\r\n        methods: {\r\n            async switchTab(tab){\r\n                this.activeTab = tab;\r\n            },\r\n            async fetchMessages(type){\r\n                if(!this.user.account_id){\r\n                    console.log('请登录');\r\n                    return;\r\n                }\r\n\r\n                try {\r\n                    const currentType = type;\r\n                    const groupedList = this.groupedMessagesByType[currentType] || [];\r\n                    const len = groupedList.length;\r\n\r\n                    const res = await uniCloud.callFunction({\r\n                        name: 'get_messages',\r\n                        data: {\r\n                            account_id: this.user.account_id,\r\n                            type: currentType,\r\n                            create_date: len > 0 ? groupedList[len - 1].create_date : null,\r\n                            day_count: 7\r\n                        }\r\n                    });\r\n\r\n                    if (res.result.code === 200) {\r\n                        console.log('收到消息', res.result.data);\r\n                        this.groupedMessagesByType[currentType] = groupedList.concat(res.result.data);\r\n                        this.updateTabCounts();\r\n                    } \r\n                    else {\r\n                        uni.showToast({\r\n                            title: '获取消息失败',\r\n                            icon: 'none'\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            },\r\n            //时间格式化函数\r\n            formatDate(create_time) {\r\n                create_time= new Date(create_time);\r\n                const pad = n => n.toString().padStart(2, '0');\r\n                const year = create_time.getFullYear();\r\n                const month = pad(create_time.getMonth() + 1);\r\n                const day = pad(create_time.getDate());\r\n                const hours = pad(create_time.getHours());\r\n                const minutes = pad(create_time.getMinutes());\r\n                return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n            },\r\n            async markMessagesAsRead(messages){\r\n                console.log('click')\r\n                let update_messages = []\r\n                console.log('messages',messages);\r\n                messages.forEach(group => {\r\n                    const message = group.messages || [];\r\n                    message.forEach(msg => {\r\n                        if(msg.action_type==this.tabs[this.activeTab].type){\r\n                            msg.read = true;\r\n                            update_messages.push(msg)\r\n                        }\r\n                    });\r\n                });\r\n                if(!update_messages){\r\n                    console.log('no_need_update')\r\n                    return;\r\n                }\r\n                try{\r\n                    await uniCloud.callFunction({\r\n                        name:'update_read',\r\n                        data: {\r\n                            messages: update_messages\r\n                        }\r\n                    });\r\n                    this.updateTabCounts();\r\n                }catch(e){\r\n                    console.log(e)\r\n                }\r\n            },\r\n            updateTabCounts() {\r\n                this.tabs[0].count = 0;\r\n                this.tabs[1].count = 0;\r\n                this.tabs[2].count = 0;\r\n\r\n                // 遍历所有分组和消息，统计各类型未读消息数量\r\n                Object.values(this.groupedMessagesByType).forEach(groupList => {\r\n                    if (Array.isArray(groupList)) { // 增加数组类型检查\r\n                        groupList.forEach(group => {\r\n                            const messages = group.messages || [];\r\n                            messages.forEach(msg => {\r\n                                if (!msg.read ) {\r\n                                    this.tabs[this.return_index(msg.action_type)].count++;\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n            return_index(type){\r\n                if(type === 'like') return 0;\r\n                if(type === 'comment') return 1;\r\n                if(type === 'share') return 2;\r\n            },\r\n            getMessageText(msg) {\r\n                if (msg.target_type === 'post' && msg.action_type === 'like') return '点赞了你的帖子';\r\n                if (msg.target_type === 'comment' && msg.action_type === 'like') return '点赞了你的评论';\r\n                if (msg.target_type === 'post' && msg.action_type === 'comment') return '评论了你的帖子';\r\n                if (msg.target_type === 'comment' && msg.action_type === 'comment') return '回复了你的评论';\r\n                if (msg.target_type === 'post' && msg.action_type === 'share') return '转发了你的帖子';\r\n                return '';\r\n            },\r\n            onTouchStart(e) {\r\n                this.startX = e.touches[0].clientX;\r\n                this.dragging = true;\r\n            },\r\n            onTouchMove(e) {\r\n                if (!this.dragging) return;\r\n                const deltaX = e.touches[0].clientX - this.startX;\r\n                this.translateX = -this.activeTab * this.windowWidth + deltaX;\r\n            },\r\n            onTouchEnd(e) {\r\n                const deltaX = e.changedTouches[0].clientX - this.startX;\r\n                const threshold = this.windowWidth / 4;\r\n\r\n                if (deltaX > threshold && this.activeTab > 0) {\r\n                    this.activeTab--;\r\n                } \r\n                else if (deltaX < -threshold && this.activeTab < Object.keys(this.tabs).length - 1) {\r\n                    this.activeTab++;\r\n                }\r\n\r\n                this.translateX = -this.activeTab * this.windowWidth;\r\n                this.dragging = false;\r\n            },\r\n            //转到个人信息页\r\n            to_personal_info(msg){\r\n                const admin = msg.source_post?msg.source_post.admin:msg.source_comment.admin;\r\n                console.log('admin',admin)\r\n                uni.navigateTo({\r\n                    url: `/pages/personal_info/personal_info?account_id=${msg.actor_account_id}&visitor_account_id=${this.user.account_id}&visitor_admin=${admin}`,\r\n                });\r\n            },\r\n            //转到原帖页\r\n            to_source_post(msg){\r\n                uni.navigateTo({\r\n                    url: `/pages/source_post/source_post?post_id=${msg.source_post._id}&account_id=${this.user.account_id}&admin=${msg.source_post.admin}&username=${msg.source_post.username}&avatar=${msg.source_post.avatar}`,\r\n                });\r\n            },\r\n            toggleReplyInput(msg){\r\n                if(this.lastShowInput && this.lastShowInput !== msg){\r\n                    this.lastShowInput.showInput = false;\r\n                }\r\n                msg.showInput = !msg.showInput;\r\n                this.lastShowInput = msg;\r\n                console.log('msg',msg.showInput)\r\n            },\r\n            // 提交评论或回复\r\n            async submitComment(msg,content) {\r\n                if (!content.trim() ) {\r\n                    uni.showToast({ title: '评论不能为空', icon: 'none' });\r\n                    return;\r\n                }\r\n                if(!this.user.account_id){\r\n                    uni.showToast({ title: '请登录', icon: 'none' });\r\n                    return;\r\n                }\r\n                let loading = true;\r\n                if(loading){\r\n                    uni.showToast({\r\n                        title: '评论中...',\r\n                        icon: 'loading'\r\n                    })\r\n                }\r\n                await this.getUserLocation();\r\n                await this.resolve_ip();\r\n                const comment={\r\n                    _id: msg.comment_id,\r\n                    account_id: msg.actor_account_id,\r\n                    content: content,\r\n                }\r\n                const reply={\r\n                    account_id: msg.actor_account_id,\r\n                    username: msg.actor_username,\r\n                    avatar: msg.actor_avatar,\r\n                    content: content,\r\n                }\r\n                \r\n                try {\r\n                    const res = await uniCloud.callFunction({\r\n                    name: 'submit_comment',\r\n                        data:{\r\n                            user: this.user,\r\n                            post: null,\r\n                            comment: comment,\r\n                            reply: reply,\r\n                            type: 1,\r\n                            content: content,\r\n                        } \r\n                    });\r\n                        \r\n                    if(res.result.msg == \"success\"){\r\n                        msg.showInput = false; // 隐藏输入框\r\n                        this.newReply = ''; // 清空输入框内容\r\n                        loading = false;\r\n                        uni.showToast({ title: '评论成功', icon: 'success' });\r\n                    } \r\n                }catch (error) {\r\n                    uni.showToast({ title: '评论失败', icon: 'none' }); \r\n                }\r\n            },\r\n            //获取用户ip地址\r\n            async getUserLocation() {\r\n            try {\r\n                const res = await uniCloud.callFunction({\r\n                    name: 'get_ip',\r\n                    data: {}\r\n                })\r\n                // console.log('res',res)\r\n                if(res.result.code === 200){\r\n                    this.user.ip = res.result.data; // 设置用户的 IP 地址\r\n                }\r\n            }catch(e){\r\n                console.error('获取位置失败', e);\r\n            }\r\n            },\r\n            //解析ip地址\r\n            async resolve_ip(){\r\n                const host = \"https://ipcity.market.alicloudapi.com\";  // 请求地址 支持http 和 https 及 WEBSOCKET\r\n                const path = \"/ip/city/query\";   // 后缀\r\n                const appCode = \"1dc84a4fe7fc40238d1a17ad665c59d3\"; \r\n                // 构建查询参数\r\n                const querys = `ip=${encodeURIComponent(this.user.ip)}&coordsys=WGS84`;\r\n                const urlSend = `${host}${path}?${querys}`;   // 拼接完整请求链接\r\n                try {\r\n                const res = await uni.request({\r\n                                url: urlSend,\r\n                                method: 'GET',\r\n                                header: {\r\n                                \"Authorization\": `APPCODE ${appCode}`\r\n                                }\r\n                            });\r\n                if (res.statusCode === 200) {\r\n                    if(res.data.code == 200){\r\n                    let city;\r\n                    if(res.data.data.result.city){\r\n                        city=res.data.data.result.city;\r\n                    }\r\n                    else if(res.data.data.result.prov){\r\n                        city=res.data.data.result.province;\r\n                    }\r\n                    else if(res.data.data.result.country){\r\n                        city=res.data.data.result.country;\r\n                    }\r\n                    else if(res.data.data.result.continuent){\r\n                        city=res.data.data.result.continent;\r\n                    }\r\n                    if(city.endsWith('市')){\r\n                        city=city.slice(0,-1)\r\n                    }\r\n                    else if(city.endsWith('省')){\r\n                        city=city.slice(0,-1)\r\n                    }\r\n                    this.user.ip = city; // 设置用户的 IP 地址\r\n                    console.log('获取到的IP地址',this.user.ip)\r\n                    }\r\n                }\r\n                } catch (err) {\r\n                console.error('resolve_ip 请求失败:', err);\r\n                }\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n@import url(message.css)\r\n</style>","import MiniProgramPage from 'D:/CODE/vue/canteen_program/pages/message/message.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","uniCloud"],"mappings":"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"}