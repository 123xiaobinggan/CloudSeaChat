{"version":3,"file":"source_post.js","sources":["pages/source_post/source_post.vue","../../../H-builderx/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvc291cmNlX3Bvc3Qvc291cmNlX3Bvc3QudnVl"],"sourcesContent":["<template>\r\n    <view class=\"home-page\">\r\n        <view class=\"post\" v-if=\"!isLoading\">\r\n            <view v-if=\"!no_post\">\r\n                <view class=\"post-header\">\r\n                    <image :src=\"post.avatar\" class=\"avatar\" mode=\"aspectFill\" />\r\n                    <view class=\"user-info\">\r\n                    <text class=\"username\">{{ post.username }}</text>\r\n                    <br/>\r\n                    <text class=\"meta\">{{ formatDate(post.create_time) }} · {{ post.ip }}</text>\r\n                    </view>\r\n                    <view v-if=\"post.account_id == user.account_id || user.admin\" class=\"post-actions\">\r\n                    <image src=\"/static/index/垃圾桶.png\" class=\"action-icon\" @tap=\"()=>confirmDeletePost(post)\" />\r\n                    </view>\r\n                </view>\r\n\r\n                <view class=\"post-content\">\r\n                    <text>{{ post.content }}</text>\r\n                    <view v-if=\"post.media?.length > 1\">\r\n                        <view\r\n                        v-if=\"Array.isArray(post.media) && post.media.length\"\r\n                        :class=\"['media-grid', 'media-count-' + post.media.length]\"\r\n                        >\r\n                        <view\r\n                            v-for=\"(media, mediaIndex) in post.media\"\r\n                            :key=\"mediaIndex\"\r\n                            class=\"media-item\"\r\n                            @tap=\"()=>previewMedia(post.media, mediaIndex)\"\r\n                        >\r\n                            <image v-if=\"media.type === 'image'\" :src=\"media.url\" class=\"post-media\" mode=\"aspectFill\" />\r\n                            <video v-else-if=\"media.type === 'video'\" :src=\"media.url\" class=\"post-media\" controls />\r\n                        </view>\r\n                        </view>\r\n                    </view>\r\n                    <view v-else-if=\"post.media?.length === 1\">\r\n                        <view class=\"one-media-item\" @tap=\"()=>previewMedia(post.media, 0)\">\r\n                        <image v-if=\"post.media[0].type === 'image'\" :src=\"post.media[0].url\" class=\"post-one-media\" mode=\"widthFix\" />\r\n                        <video v-else-if=\"post.media[0].type === 'video'\" \r\n                            :src=\"post.media[0].url\"  \r\n                            :autoplay=\"false\" \r\n                            controls \r\n                        />\r\n                        </view>\r\n                    </view>\r\n                </view>\r\n                \r\n                <view class=\"post-actions\">\r\n                    <view class=\"action like-action\" @tap=\"()=>like(post,post,null,null,0)\">\r\n                    <image \r\n                    :src=\"post.liked ? '/static/index/已赞.png' : '/static/index/赞.png'\" \r\n                    class=\"action-icon\" \r\n                    :class=\"{ 'like-heart-animated': post.liked }\" />\r\n\r\n                    <text>{{ post.like_count }}</text>\r\n                    </view>\r\n                    <view class=\"action\">\r\n                    <image src=\"/static/index/评论.png\" class=\"action-icon\" />\r\n                    <text>{{ post.comment_count || 0 }}</text>\r\n                    </view>\r\n                    <view class=\"action\" @tap=\"()=>to_post(post,1)\">\r\n                    <image src=\"/static/index/转发.png\" class=\"action-icon\" />\r\n                    <text>{{ post.forward_count || 0 }}</text>\r\n                    </view>\r\n                </view>\r\n\r\n                <!-- 帖子评论 -->\r\n                <view v-if=\"post.showComments\" class=\"comments\">\r\n                    <view v-for=\"(comment,commentIndex) in post.comments\" :key=\"comment._id\" class=\"comment\" @longpress.stop=\"handleLongPressComment_Reply(postIndex,commentIndex,null,post,comment)\">\r\n                    <image :src=\"comment.avatar\" class=\"comment-avatar\" mode=\"aspectFill\" @tap=\"to_personal_info(comment)\" />\r\n                    <view class=\"comment-content\">\r\n                        <view class=\"comment-header\">\r\n                        <view class=\"comment-info\">\r\n                            <text class=\"comment-user\">{{ comment.username }}</text>\r\n                            <text class=\"comment-meta\">{{ formatDate(comment.create_time) }} · {{ comment.ip }}</text>\r\n                        </view>\r\n\r\n                        <view class=\"comment-actions\">\r\n                            <view class=\"like-action\" @tap.stop=\"()=>like(comment,post,comment,null,1)\">\r\n                              <image :src=\"comment.liked ? '/static/index/已赞.png' : '/static/index/赞.png'\" class=\"action-icon\" />\r\n                              <text>{{ comment.like_count }}</text>\r\n                            </view>\r\n                        </view>\r\n                        </view>\r\n                        <text class=\"comment-text\">{{ comment.content }}</text>\r\n\r\n                        <view class=\"reply-action\" @tap.stop=\"()=>toggleReplyInput(comment)\">\r\n                            <text style=\"color:grey \">回复</text>\r\n                        </view>\r\n\r\n                        <!-- 回复comment-->\r\n                        <view v-if=\"comment.showReplyInput\" class=\"reply-input-wrapper\">\r\n                        <input\r\n                            v-model=\"newReply\"\r\n                            class=\"reply-input\"\r\n                            :placeholder=\"'回复'+ comment.username + '...' \"\r\n                        />\r\n                        <button class=\"reply-button\" @tap=\"()=>submitComment(post,comment,null,1,newReply)\">回复</button>\r\n                        </view>\r\n\r\n                        <!-- 展示回复 -->\r\n                        <view v-if=\"comment.replies?.length && !comment.showReply\"  class=\"showReply\" @tap.stop=\"comment.showReply = true\">\r\n                        <text>{{ comment.replies.length }}条回复</text>  \r\n                        </view>\r\n\r\n                        <!-- 回复列表 -->\r\n                        <view v-if=\"comment.showReply\">\r\n                        <view v-for=\"(reply,replyIndex) in comment.replies\" :key=\"reply._id\" class=\"reply\" @longpress.stop=\"handleLongPressComment_Reply(postIndex,commentIndex,replyIndex,comment,reply)\">\r\n                        <image :src=\"reply.avatar\" class=\"reply-avatar\" mode=\"aspectFill\" @tap=\"to_personal_info(reply)\"/>  \r\n                            <view class=\"reply-content\">\r\n                            <view class=\"reply-header\">\r\n                                <view class=\"reply-info\">\r\n                                <text class=\"reply-user\">{{ reply.username }}</text>\r\n                                <text class=\"reply-meta\">{{ formatDate(reply.date) }} · {{ reply.ip }}</text>\r\n                                </view>\r\n                                <view class=\"reply-action\">\r\n                                <view class=\"reply-like-action\" @tap.stop=\"()=>like(reply,post,comment,reply,2)\">\r\n                                    <image :src=\"reply.liked ? '/static/index/已赞.png' : '/static/index/赞.png'\" class=\"action-icon\" />\r\n                                    <text>{{ reply.like_count }}</text>\r\n                                </view>\r\n                                </view>\r\n                            </view>\r\n\r\n                            <!-- 评论内容 -->\r\n                            <text class=\"reply-text\">\r\n                                <text v-if=\"reply.reply_username\">\r\n                                回复\r\n                                <text class=\"relpy_username\">{{ reply.reply_username }}: </text>\r\n                                </text>\r\n                                {{ reply.content }}\r\n                            </text>\r\n\r\n                            <!--回复按钮-->\r\n                            <view class=\"reply-action\" @tap.stop=\"()=>toggleReplyInput(reply)\">\r\n                                <text>回复</text>\r\n                            </view>\r\n\r\n                            <!-- 回复输入框 --><!-- 回复reply -->\r\n                            <view v-if=\"reply.showReplyInput\" class=\"reply-input-wrapper\">\r\n                                <input\r\n                                v-model=\"newReplyReply\"\r\n                                class=\"reply-input\"\r\n                                :placeholder=\" '回复' + reply.username + '...' \"\r\n                                />\r\n                                <button class=\"reply-button\" @tap=\"()=>submitComment(post,comment,reply,2,newReplyReply)\">回复</button>\r\n                            </view>\r\n\r\n                            </view>\r\n\r\n                        </view>\r\n                        </view>\r\n                    </view>\r\n                    </view>\r\n\r\n                    <!--评论输入框--><!-- 回复post -->\r\n                    <view class=\"comment-input-wrapper\" @tap.stop>\r\n                    <input\r\n                        v-model=\"newComment\"\r\n                        class=\"comment-input\"\r\n                        placeholder=\"发表评论...\"\r\n                    />\r\n                    <button class=\"reply-button\" @tap=\"()=>submitComment(post,null,null,0,newComment)\">回复</button>\r\n                    </view>\r\n                </view>\r\n            </view>\r\n            <view v-else class=\"no-post\">\r\n                <text>帖子已删除</text>\r\n            </view>\r\n            \r\n        </view>\r\n    </view>\r\n</template>\r\n\r\n<script >\r\nimport PubSub from 'pubsub-js';\r\nexport default {\r\n  data() {\r\n    return {\r\n        post_id: '',\r\n        user: {\r\n            account_id: '',\r\n            username: '',\r\n            avatar: '/static/info/未登录.png',\r\n            admin: false,\r\n        },\r\n        post: {},\r\n        newComment: '',\r\n        newReply: '',\r\n        newReplyReply: '',\r\n        replyPlaceholder: '发表评论...', // 回复框的占位符\r\n        last_showInput: null, // 记录上一个显示的输入框\r\n        isLoading: true, // 是否正在加载\r\n        no_post: false, // 是否没有帖子\r\n        token: ''\r\n    };\r\n  },\r\n  onLoad(option) {\r\n    this.post_id = option.post_id;\r\n    this.user.account_id = option.account_id;\r\n    this.user.username = option.username || '未登录';\r\n    this.user.avatar = option.avatar || '/static/info/未登录.png';\r\n    this.user.admin = option.admin;\r\n    uni.showLoading({ \r\n        title: '加载中...', \r\n        mask: true \r\n    });\r\n    this.fetchPost(this.post_id)\r\n  },\r\n  onUnload(){\r\n    if(this.no_post){\r\n        uni.$emit('return_from_source_post',this.post_id);\r\n    }\r\n    if(this.token){\r\n      PubSub.unsubscribe(this.token);\r\n      this.token = '';\r\n    }\r\n  },\r\n  methods: {\r\n    //获取帖子和评论\r\n    async fetchPost(post_id) {\r\n      try {\r\n        const res = await uniCloud.callFunction({\r\n          name: 'get_target_post',\r\n          data:{\r\n            post_id: post_id,\r\n            account_id: this.user.account_id,\r\n          }\r\n        });\r\n        if(res.result.code === 200){\r\n          this.post = res.result.data;\r\n          this.post.showComments = true;\r\n          console.log('comments',this.post.comments);\r\n          uni.showToast({\r\n            title: '加载成功',\r\n            icon: 'success',\r\n            duration: 1000\r\n          });\r\n        }else{\r\n            this.no_post = true; // 设置没有帖子\r\n        }\r\n      }catch(e){\r\n        console.error('获取帖子失败', e);\r\n      }finally {\r\n        uni.hideLoading();\r\n        this.isLoading = false; // 加载完成\r\n      }\r\n    },\r\n    //时间格式化函数\r\n    formatDate(date) {\r\n      date = new Date(date);\r\n      const pad = n => n.toString().padStart(2, '0');\r\n      const year = date.getFullYear();\r\n      const month = pad(date.getMonth() + 1);\r\n      const day = pad(date.getDate());\r\n      const hours = pad(date.getHours());\r\n      const minutes = pad(date.getMinutes());\r\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    },\r\n    // 预览媒体\r\n    previewMedia(media, currentIndex) {\r\n      uni.previewMedia({\r\n        sources: media.map(item => ({\r\n          url: item.url,\r\n          type: item.type\r\n        })),\r\n        current: currentIndex, // 当前预览的媒体索引\r\n      });\r\n    },\r\n    //点赞\r\n    async like(item, post, comment, reply, type) {\r\n      if (!this.user.account_id) {\r\n        uni.showToast({ title: '请登录', icon: 'none' });\r\n        return;\r\n      }\r\n      item.liked = !item.liked; // 切换点赞状态\r\n      item.like_count += item.liked ? 1 : -1;\r\n      try {\r\n        const res = await uniCloud.callFunction({\r\n          name: 'user-liked',\r\n          data: {\r\n            target_id: item._id,\r\n            post: post,\r\n            comment: comment,\r\n            reply: reply,\r\n            account_id: this.user.account_id,\r\n            type: type\r\n          }\r\n        });\r\n        \r\n        if(res.result.msg === \"请登录\")\r\n        {\r\n          uni.showToast({\r\n            title: '请登录',\r\n            icon: 'none'\r\n          });\r\n        }\r\n        else if(res.result.msg != \"success\") {\r\n          item.liked = !item.liked; // 还原点赞状态\r\n          item.like_count -= item.liked ? -1 : 1;\r\n          uni.showToast({\r\n            title: res.result.message || '操作失败',\r\n            icon: 'none'\r\n          });\r\n        }\r\n        else if(res.result.first){\r\n          PubSub.publish('update_activity',5);\r\n        }\r\n      } catch (err) {\r\n        console.error('点赞失败:', err);\r\n        uni.showToast({\r\n          title: '网络错误',\r\n          icon: 'none'\r\n        });\r\n      }\r\n    },\r\n    // 确认删除帖子\r\n    confirmDeletePost(post) {\r\n      uni.showModal({\r\n        title: '确认删除',\r\n        content: '确定要删除这条帖子吗？',\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            this.deletePost(post); // 调用删除函数\r\n          }\r\n        }\r\n      });\r\n    },\r\n    //删除帖子\r\n    async deletePost(post) {\r\n      try {\r\n        const res = await uniCloud.callFunction({\r\n            name: 'delete_post',\r\n            data: { post_id: post._id }\r\n        });\r\n        if (res.result.code === 200) {\r\n            uni.showToast({ title: '删除成功', icon: 'success' });\r\n            this.post = {}; // 清空当前帖子数据\r\n            this.no_post = true; // 设置没有帖子\r\n        } else {\r\n            uni.showToast({ title: '删除失败', icon: 'none' });\r\n        }\r\n      } catch (error) {\r\n            console.error('删除失败:', error);\r\n            uni.showToast({ title: '网络错误', icon: 'none' });\r\n      }\r\n    },\r\n    // 提交评论或回复\r\n    async submitComment(post,comment,reply,type,content) {\r\n      if ((!this.newComment.trim() && type==0) || (!this.newReply.trim() && type==1) || (!this.newReplyReply.trim() && type==2)) {\r\n        uni.showToast({ title: '评论不能为空', icon: 'none' });\r\n        return;\r\n      }\r\n      if(!this.user.account_id){\r\n        uni.showToast({ title: '请登录', icon: 'none' });\r\n        return;\r\n      }\r\n      try {\r\n        const res = await uniCloud.callFunction({\r\n          name: 'submit_comment',\r\n          data:{\r\n            user:this.user,\r\n            post: post,\r\n            comment: comment,\r\n            reply:reply,\r\n            type: type,\r\n            content: content,\r\n          } \r\n        });\r\n\t\t    \r\n        if(res.result.msg == \"success\"){\r\n          if(type==0){\r\n            post.comment_count += 1; // 更新评论数量\r\n            post.comments.unshift(res.result.data);\r\n            this.newComment = ''; // 清空输入框\r\n          } \r\n          else{\r\n            comment.replies.unshift(res.result.data);\r\n            if(reply){\r\n              this.newReplyReply = '',\r\n              reply.showReplyInput=false; // 清空输入框\r\n            }\r\n            else{\r\n              this.newReply = '',\r\n              comment.showReplyInput=false; // 清空输入框\r\n            }\r\n          }\r\n          uni.showToast({ title: '评论成功', icon: 'success' });\r\n        } \r\n      }catch (error) {\r\n        uni.showToast({ title: '评论失败', icon: 'none' }); \r\n      }\r\n    },\r\n    //处理长按事件删除comment或reply\r\n    handleLongPressComment_Reply(postIndex,commentIndex,replyIndex,parent,item){\r\n      if(item.account_id && item.account_id !== this.user.account_id && !this.user.admin) {\r\n        return;\r\n      }\r\n      uni.showActionSheet({\r\n        itemList: ['删除'],\r\n        success: (res) => {\r\n          // 点击了“删除”\r\n          if (res.tapIndex === 0) {\r\n            uni.showModal({\r\n              title: '确认删除',\r\n              content: '确定要删除这条评论吗？',\r\n              success: (res) => {\r\n                if (res.confirm) {\r\n                  this.deleteComment_Reply(postIndex,commentIndex,replyIndex,parent, item); // 删除操作\r\n                }\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    // 删除评论或回复\r\n    async deleteComment_Reply(postIndex,commentIndex,replyIndex,parent,item) {\r\n      let loading = true;\r\n      if(loading){\r\n        uni.showToast({\r\n          title: '删除中...',\r\n          icon: 'loading'\r\n        })\r\n      }\r\n      try {\r\n        const res = await uniCloud.callFunction({\r\n          name: 'delete_comment_reply',\r\n          data: { \r\n            parent: parent,\r\n            item: item\r\n          }\r\n        });\r\n        loading = false;\r\n        if (res.result.code === 200) {\r\n          uni.showToast({ title: '删除成功', icon:'success' }); \r\n          if(!('post_id' in item)) {//item是reply\r\n            console.log('replies',res.result.data.replies)\r\n            this.$set(this.posts[postIndex].comments[commentIndex],'replies',res.result.data.replies);\r\n          }\r\n          else{//item是comment\r\n            this.posts[postIndex].comments.splice(commentIndex, 1); // 从评论列表中移除已删除的评论\r\n            this.posts[postIndex].comment_count -= 1; // 更新评论数量\r\n          }\r\n        }\r\n      }catch (error) {\r\n        console.error('删除失败:', error);\r\n        uni.showToast({ title: '网络错误', icon: 'none' });\r\n      }\r\n    },\r\n    // 切换回复输入框的显示状态\r\n    toggleReplyInput(item) {\r\n      this.$set(item, 'showReplyInput', !item.showReplyInput);\r\n      if(this.last_showInput && this.last_showInput !== item) {\r\n        this.last_showInput.showReplyInput = false; // 隐藏上一个输入框\r\n      }\r\n      this.last_showInput = item; // 更新上一个输入框\r\n    },\r\n    //跳转到发帖页面\r\n    to_post(post, type) {\r\n      let share_post = {}\r\n      if (post) { // 如果是转发帖子{\r\n        if (post.post_type == 1 && post.source_post) {\r\n          share_post = post.source_post; // 获取原帖信息\r\n        }\r\n        else {\r\n          share_post = post; // 获取当前帖子信息\r\n        }\r\n      }\r\n      uni.navigateTo({ \r\n        url: '/pages/post/post' ,\r\n        success: () => {\r\n          PubSub.publish('to_post', {\r\n          share_post: share_post,\r\n          type: type,\r\n          account_id: this.user.account_id,\r\n          username: this.user.username,\r\n          avatar: this.user.avatar\r\n          })\r\n        }\r\n      });\r\n    },\r\n    //跳转到个人信息页面\r\n    to_personal_info(user) {\r\n      if(user.account_id == this.user.account_id){\r\n        return;\r\n      }\r\n      uni.navigateTo({\r\n          url: `/pages/personal_info/personal_info?account_id=${user.account_id}&visitor_account_id=${this.user.account_id}&visitor_admin=${this.user.admin}`,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n@import url(source_post.css);\r\n</style>\r\n","import MiniProgramPage from 'D:/CODE/vue/canteen_program/pages/source_post/source_post.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","PubSub","uniCloud","res"],"mappings":"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"}